from strategy import Strategy

class Backtester:
    def __init__(self, strategy, initial_capital=1, commission=0.075, pyramiding=5):
        """ Strategies have both data and indicators.
            The backtester iterates through the data as generated by the strategy
            and calculates metrics over time.
            The backtester assumes that the data is accurate and any indicators
            have been calculated correctly (i.e. not using future data).
            The idea is that each time the backtester iterates through a new row of data,
            that is equivalent to a new row of kline data being received by the bot,
            indicators updated and decisions made on it.
        """
        print('creating new backtester')

        self.strategy = strategy
        self.initial_capital = initial_capital
        self.commission = commission
        self.pyramiding = pyramiding
        self.n_trades = 0
        self.profit = 0

    def run_backtest(self):
        print('running backtest')
